name: Deploy to GKE

on:
  workflow_run:
    workflows: Frontend Unit Tests
    branches: [main]
    types: completed

jobs:
  publish-to-hub:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Publish to dockerhub
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Create Version (GITHUB_SHA)
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
    - name: Push to Docker Hub
      run: |-
        docker build -t davidlacho/multi-client:latest -t davidlacho/multi-client:${{steps.vars.outputs.tag}} -f ./client/Dockerfile ./client
        docker build -t davidlacho/multi-server:latest -t davidlacho/multi-server:${{steps.vars.outputs.tag}} -f ./server/Dockerfile ./server
        docker build -t davidlacho/multi-worker:latest -t davidlacho/multi-worker:${{steps.vars.outputs.tag}} -f ./worker/Dockerfile ./worker
        docker push davidlacho/multi-client:latest
        docker push davidlacho/multi-server:latest
        docker push davidlacho/multi-worker:latest
        docker push davidlacho/multi-client:${{steps.vars.outputs.tag}}
        docker push davidlacho/multi-server:${{steps.vars.outputs.tag}}
        docker push davidlacho/multi-worker:${{steps.vars.outputs.tag}}
  setup-and-deploy:
    needs: publish-to-hub
    name: K8s Setup and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials multi-cluster --zone us-central1-c
    # Deploy sample image to the GKE cluster
    - name: Create Version (GITHUB_SHA)
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
    - name: Deploy to GKE cluster
      run: |-
        kubectl apply -f k8s/
        kubectl set image deployments/server-deployment server=davidlacho/multi-server:${{steps.vars.outputs.tag}}
        kubectl set image deployments/client-deployment client=davidlacho/multi-client:${{steps.vars.outputs.tag}}
        kubectl set image deployments/worker-deployment worker=davidlacho/multi-worker:${{steps.vars.outputs.tag}}
        kubectl get services -o wide